<h1>About</h1>
<p><strong><span style="color: #000080;">首頁為各類網站之網址:</span></strong></p>
<p><span style="color: #0000ff;">課程倉儲:</span><a href="https://github.com/mdecad2022/site-KEHUEISIN">https://github.com/mdecad2022/site-KEHUEISIN</a></p>
<p><span style="color: #0000ff;">課程網站:<a href="https://mdecad2022.github.io/site-KEHUEISIN/content/index.html">https://mdecad2022.github.io/site-KEHUEISIN/content/index.html</a></span></p>
<p><span style="color: #0000ff;"></span></p>
<h1>各週心得</h1>
<p><span style="background-color: #ffff00;">w3:</span>在PUSH上去那個步驟快速許多，一年級用小黑框PUSH上去時，都要等很久，現在直接在replit中直接推倉儲很方便，同步率也非常的快。</p>
<p><span style="background-color: #ffff00;">w4:</span> 不小心將已建好的config刪除，按下了run標題還原為最一開始，我嘗試了很多次，我將還原的標題改成自己的個人網站名，竟奇蹟般能登陸動態網站修整內容，前提是要拉出replit外才可登錄。</p>
<p><span style="background-color: #ffff00;">w5/6/7:</span>因為一開始可攜環境裝在筆電的資料夾，造成小黑框一點開路徑顯示在y槽，經過多次轉換才轉到我要的資料夾，不過這還好，我覺得最難用的是后續下載的那些檔案及程式除錯，整體下來我花了三週才真正加入python3，不過我發現他並未將我replit上的動態網站，覆蓋過去，而是直接結合在了一起，我可以直接在replit的動態網站上直接新增內容，並且在我的stud.cycu.org網址能被看見，除了標題不一樣，內容皆是一致，太神奇了!!! 但stud.cycu.org:8xxx網址只能用非proxy網站執行並修改(<span style="color: #ff0000;">后期發現其實不用，只要有登入stud.cycu.org主機中就可</span>)，後續再登入replit中想修改並要push到倉儲的網站時，發生了在github中能看到push的內容，但靜態網頁卻沒有出現，原來是已經被stud.cycu.org蓋過去了，要修改還需要登入stud.cycu.org中，修改後使用網站中的acp按鈕傳送至遠端倉儲，使靜態網站和動態網站內容一致，實際上在acp這塊我遇到了大問題(<span style="color: #ff0000;">已經解決，需手動PUSH</span>)，可能當初我在下載可攜環境的時候檔案整理的沒有很好，導致后期push時遇到兩個分支的問題，感覺每次我總會瞎搞，並把原本簡單的東西弄到令人頭痛。</p>
<p><span style="background-color: #ffff00;">w8/9/10:</span>因為前面在處理acp的問題很久，現在弄好了正加緊趕工hw的零件繪製，目前進度已完成一半，接下來就是組合的部分，一切處理完就能上繪製影片。</p>
<p><span style="background-color: #ffff00;">w11:</span>建立TCExam 題庫，由各組出題，就目前為止，我各人已有想到，其他組員未知，要建立題庫得先去可攜python中輸令命令，使其開啟 Leo Editor，進入后需先建立題庫時間，在更改預設的題庫模組名稱(<span style="color: #ff0000;">也就是name中內容改為課程名哪班第幾組在第幾週所建立之題庫下去命名<span style="color: #000000;">)，而後將模組內預設的題庫主題也設定新的名稱(<span style="color: #ff0000;">就是我要出的主題分類標語<span style="color: #000000;">)在來就正式進入出題環節，並判斷</span></span></span></span>isright若為ture則答案正確，反之則錯誤(<span style="color: #0000ff;">ex.<span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">isright</span><span class="cm-tag cm-bracket">&gt;</span><span style="color: #ff0000;">true/false</span><span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">isright</span><span class="cm-tag cm-bracket">&gt;<span style="color: #000000;">)</span></span></span></p>
<h2>hw繪製心得</h2>
<p>一開始下載了老師給的7zip檔，裡面有鑽床的各式零件圖及組合圖，用nx2027打開後所有零件皆是畫完後的成品，零件尺寸需要自己用nx內的直尺量，因為是第一次使用這個版本，1年級我們有修cnc這個必修課，也是有用到nx，但是令一個版本，整體操作上沒有太大區別，就是個零件在繪製上較廢時，且在組合時，零件尺寸量錯，則在裝配上會產生極大的落差，其中有幾件還有螺紋的問題，當第一個齒畫錯，後面陣列就會出現問題，其他零件，幾乎沒什麼難度(<span style="background-color: #ffcc00;">更:</span><span style="color: #ff0000;">對nx2027不是很熟，花了點時間，但整體而言跟inventor很像</span>)。</p>
<p><img alt="" height="314" src="/images/螢幕擷取畫面 2022-12-13 103834.png" width="578"/></p>
<h1>H1</h1>
<h2>W6</h2>
<p><br/><span style="background-color: #ffff00;"><span style="color: #0000ff;">NX2027</span>繪製各零件影片</span></p>
<p><span style="background-color: #ff9900;">零件:</span></p>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/%E9%91%BD%E5%BA%8A.zip">鑽床部分零件.zip</a></p>
<p><span style="background-color: #ff9900;">零件繪製總結(<span style="color: #ff0000;">鑽床</span>):</span></p><h2>w10</h2>
<div>已知 <a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EQTYcGymLWhJkYvzj94FNowBUzVx9Qaxn7nbtvZkdE1CUg?e=DJat7E" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:u:/s/cad2022/eqtycgymlwhjkyvzj94fnowbuzvx9qaxn7nbtvzkde1cug?e=djat7e">block.prt</a> 中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案.</div>
<div><span style="background-color: #ffcc00;">檔案:</span></div>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/%E8%AE%8A%E6%9B%B4%E5%B0%BA%E5%AF%B8.7z">變更尺寸block</a></p>
<div></div>
<div><span style="background-color: #ffcc00;"><img alt="" height="273" src="/images/擷取.PNG" width="504"/></span></div>
<h2>w12</h2>
<p><span style="background-color: #ffcc00;">此頁為小組出題頁面:</span></p>
<p>組員:柯惠心、紀宜馨、李學淵、卓還琮</p>
<p>1.</p>
<p>2.</p>
<p></p>
<p></p><h2>w13</h2>
<h3>h2</h3>
<p>這次的h2頁面排版跟內容跟w14內容一致，算是w14的總結，這次的課程碰到了很多的繪圖軟體，對於後續一些專題製作上有更多的繪圖軟體選擇，操作上跟inventor差不多，就現在來說CoppeliaSim在使用上我覺得很不習慣，在零件動作上很容易卡住，join時常顯示出警告符號，但不是說不好，因為這符號出現可能就是件與件間無法協調，後續再除錯就好，當零件前後位置放錯容易出現警告符號，原因同前所述。</p>
<p><span style="color: #ff0000;">Solvespace</span>零件繪製7zip:</p>
<div><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/one_link.7z/">連趕與旋轉軸7zip</a></div>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/nx%20one_link.zip/">nx one_link 7zip</a></p>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/oneshape%20one_link.zip/">oneshape one_link.zip</a></p>
<p><span style="background-color: #ffcc00;">零件繪製影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/solveshpae 考試內容.mp4" title="YouTube video player" width="485"></iframe></p>
<p><span style="background-color: #ffcc00;"><span>單軸</span><span>旋轉零件7zip:</span></span></p>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/one_link%20%E5%96%AE%E8%BB%B8%E6%97%8B%E8%BD%89.zip">one_link單軸旋轉.zip</a></p>
<p><span style="background-color: #ffcc00;">單軸旋轉零件組影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/w14 單軸旋轉.mp4" title="YouTube video player" width="485"></iframe></p>
<h2>Solvespace</h2>
<h3>H3</h3>
<div><span style="background-color: #ffcc00;">零件7zip檔:</span></div>
<div><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/one_link.7z/">連趕與旋轉軸7zip</a></div>
<div><span style="background-color: #ffcc00;">總和:</span></div>
<div></div>
<div><img alt="" height="252" src="/images/螢幕擷取畫面 2022-12-13 113244.png" width="485"/></div>
<div><span style="background-color: #ffcc00;">相同連桿與旋轉軸W13，<span style="color: #ff0000;">Solvespace</span>零件繪製考試影片:</span></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/solveshpae 考試內容.mp4" title="YouTube video player" width="485"></iframe></p>
<h2>NX</h2>
<h3>HW</h3>
<div><span style="background-color: #ffcc00;">零件7zip檔:</span></div>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/nx%20one_link.zip/">nx one_link 7zip</a></p>
<div><span style="background-color: #ffcc00;">總和:</span></div>
<div><span style="background-color: #ffcc00;"><img alt="" height="252" src="/images/螢幕擷取畫面 2022-12-20 210513.png" width="485"/></span></div>
<div><span style="background-color: #ffcc00;"></span></div>
<div><span style="background-color: #ffcc00;"><span style="color: #ff0000;">NX2027</span> 繪製 one link robot 零組件:</span></div>
<div></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/nx 零件繪製.mp4" title="YouTube video player" width="485"></iframe></p>
<h2>Onshape</h2>
<h3>HW3</h3>
<p><span style="background-color: #ffcc00;">零件7zip檔:</span></p>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/oneshape%20one_link.zip/">oneshape one_link.zip</a></p>
<p><span style="background-color: #ffcc00;">總和:</span></p>
<p><span style="background-color: #ffcc00;"><img alt="" height="252" src="/images/螢幕擷取畫面 2022-12-20 211209.png" width="497"/></span></p>
<div><span style="background-color: #ffcc00;">相同連桿與旋轉軸W13，<span color="#ff0000" style="color: #ff0000;">Oneshape</span>零件繪製考試影片1:</span></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="252" src="/downloads/oneshape 考試影片.mp4" title="YouTube video player" width="485"></iframe></p>
<p><span style="background-color: #ffcc00;">影片2:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="252" src="/downloads/w14 單軸旋轉.mp4" title="YouTube video player" width="485"></iframe></p>
<h1>w15</h1>
<p><span style="background-color: #ffcc00;">零件7zip檔超連結:</span></p>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/two_link%20assembly.7z/">two_link assembly.7z</a></p>
<p><span style="background-color: #ffcc00;">零件繪製影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/w15.mp4" title="YouTube video player" width="485"></iframe></p>
<p><span style="background-color: #ffcc00;">丟入CoppeliaSimEdu中執行two_link旋轉:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/two_link影片.mp4" title="YouTube video player" width="485"></iframe></p>
<p><span style="background-color: #ffcc00;"></span><span style="background-color: #ff9900;">旋轉展示:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/CoppeliaSim Edu - New file - rendering_ 1 ms (8.0 fps) - SIMULATION STOPPED 2023-01-01 20-46-24.mp4" title="YouTube video player" width="485"></iframe></p>
<p><span style="background-color: #ffcc00;"></span><span style="background-color: #ff9900;"></span></p><h1>w16</h1>
<p><span style="background-color: #ffcc00;">彈珠台檔案:</span></p>
<p><a href="https://github.com/mdecad2022/site-KEHUEISIN/raw/main/downloads/%E5%BD%88%E7%8F%A0%E6%AA%AF.zip">彈珠檯.zip</a></p>
<p></p>
<p></p>
<p><img alt="" height="180" src="/images/螢幕擷取畫面 2023-01-01 192106.png" width="332"/></p>
<p><span style="background-color: #ffcc00;">彈珠台繪製影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="/downloads/彈珠檯.mp4" title="YouTube video player" width="485"></iframe></p>
<p><span style="background-color: #ffcc00;"></span><span style="background-color: #ff9900;">彈珠檯作動影片:</span></p><h1>Brython</h1>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; refs/remotes/origin/main</p>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>